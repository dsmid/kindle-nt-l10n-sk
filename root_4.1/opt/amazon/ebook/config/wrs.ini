#------------------------------------------
# This file contains the configuration
# properties for browserd (WRS)
#------------------------------------------

#------------------------------------------
#              DirectFB options
#------------------------------------------
dfbArgs = "no-linux-input-grab,no-vt,pixelformat=LUT8,font-format=A8,no-cursor"
#viewportYShift = 121 # Pixels

#------------------------------------------
#              Network options
#------------------------------------------
# The following should be turned on once we are official (otherwise web sites will see that Kindle is using webkit)
userAgentKindleVersion = "Kindle/3.0 (screen 600x800; rotate)"
acceptEncodingHeader = "gzip"        # Default: '' (None)
idleConnsTimeout_sec = 25            # Default: 115
#maxConnsPerHost = 8                 # Default: 8
#maxConnections = 24                 # Default: 3*maxConnsPerHost (same default as Firefox)

# When the proxy is in use, WebKit will still believe that maxConnsPerHost connections can be made on a single host (not the proxy but the origin server)
# Therefore, if maxConnsPerProxy is large enough, the sequence of requests will be closer to the one than when no proxy is used.  
#maxConnsPerProxy = 24		    # Default: maxConnections

# To free proxy resources, ensure that once the document is loaded, no more than maxKeepAliveProxyConns keep-alive connections are kept around
# If set to 0, the proactive allocation of connections is disabled
#maxKeepAliveProxyConns = 0         # Default: 8

#networkStatsFile = "/mnt/base-us/netstats.csv"
#networkStatsSummary = true

#------------------------------------------
#              File paths
#------------------------------------------
cookieDir = "/var/local/browser"
trackerStateFile = "/var/tmp/browser_tracker_state"
readabilityDir = "/usr/share/browser/readability/"
errormsgsJS = "messages_min_utf16.js"
readabilityJS = "/usr/share/browser/readability/readability_min_utf16.js"
readabilityCSS = "/usr/share/browser/readability/readability_min_utf16.css"

#------------------------------------------
#                 Display
#------------------------------------------
horizontalFlashingThreshold = 80 # Percentage (0 to always flash, 100 to never flash)
verticalFlashingThreshold =   80 # Percentage (0 to always flash, 100 to never flash)

# If set to true, transfering the content and starting the screen refresh are done in 2 separate ioctl calls
#ioctlTwoPasses = true           # Default: false

# Time out (in ms) after which the high color quality should be restored
#lowColorQualityTimeOut = 2000             # Default: 1000 ms

# Time out (in ms) after which the high color quality should be restored
# when user perfomed a zoom from the zoom menu (the user needs more time on a zoom to get accustomed to the content
#lowColorQualityZoomTimeOut = 2000	   # Default: 1500 ms

# Flash when the the full screen is updated to restore the full resolution of colors
#flashWhenRestoringHighColorQuality = true # Default: false

# If duration between 2 requests to lowColorQuality is greater than this increment, the last request is ignored
#lowColorQualityRepeatMaxInterval = 800   # Default: 1000ms

#------------------------------------------
#                 Security
#------------------------------------------

# SSL CA certificate file
sslCertificates = "/etc/ssl/certs/ca-certificates.crt" # Default: None

#------------------------------------------
#                 Loading
#------------------------------------------

# Perform a fit to width when the page is loaded
onLoadFitToWidth = true

# Threshold above which load to fit is not performed (as a percentage)
# For example, 75 means that if more than 75% of the web page fits on the screen, do not apply fitToWidth
onLoadFitToWidthThreshold = 75  # Default: 100

disableRenderingWhileLoading = false

#------------------------------------------
#                Icons 
#------------------------------------------
cursorHandFile = "/mnt/base-us/cursor_hand.png"
cursorPanFile = "/mnt/base-us/cursor_pan.png"
cursorZoomFile = "/mnt/base-us/cursor_zoom.png"
cursorFitFile = "/mnt/base-us/cursor_hand2.png"
#showMiniMenu = true

#------------------------------------------
#       Fit-To-width Frame Navigation
#------------------------------------------

# Percentage relative to the screen size by which the 
# For example, if the window width is 600 pixels and the content width is 1200 pixels, 25% increment means that 
# the frame will actually move by (25%*600)*(600/1200)=75px (600/1200 being the fit-to-width zoom level). 
# In other words the frame is going to move by a quarter of its size.
#frameXIncrement = 25    # default: 25%
#frameYIncrement = 25    # default: 25%

#------------------------------------------
#                 Focus
#------------------------------------------

# Fast rendering draws the highlight at the lowest graphical level (in the frmae buffer). It also supports wrapped text by falling back on slower rendering.
focusFastRendering = true               # Default: false

focusCenterCursorOnImage = false        # Default: true
#focusShowHighlight = false             # Default: true

#focusRingWidth = 4                     # Width in pixels. Default: 4.
#focusInnerRingColor = 255              # Gray level [0..255]. Default: 255.
#focusOuterRingColor = 0                # Gray level [0..255]. Default: 0
#focusRingOffset = 2			# When focusFastRendering is true, the element outline is inflated by this offset. Default: 2

# Highlight on the screen the node which influenced the cursor movement (disabled when using focusFastRendering=true)
#focusHighlightInfluentialNode = true   # Default: false

# Vertical offset between the cursor hot point and the actual position of the cursor
focusCursorYOffset = 5                  # Default: 5 pixels

# Minimum distance in pixels between focused element edge and cursor
#focusCursorXOffset = 10                # Default: 10 pixels

#------------------------------------------
#                  Cursor
#------------------------------------------

# True to turn cursor menu on
#cursorMenuEnabled = true		# Default: false

# Time out (in ms) after which cursor is reset to navigation mode (hand cursor)
#cursorTimeOut = 5000                   # Default: 8000 ms

# Maximum increment by which the cursor can move
#cursorXIncrement = 0                   # Default: 100
#cursorYIncrement = 0                   # Default: 80

# Margins used to determine the area where cursor starts panning
#cursorPanningXMargin = 50              # Default: 50 pixels
#cursorPanningYMargin = 50              # Default: 50 pixels

# Increment (as a percentage of the window) by which the view should be panned
# Used when the cursor reaches the edge to pan further and in pan mode
#cursorPanningXIncrement = 25           # Default: 25 %
#cursorPanningYIncrement = 25           # Default: 25 %


#------------------------------------------
#         Heartbeat
#------------------------------------------
heartbeatFile = "/var/run/browserd.stamp"
# time (in milliseconds) between heartbeats
heartbeatInterval = 60000

#------------------------------------------
#                   Debug
#------------------------------------------

# commands to execute when we start browserd in interactive mode
profile = "/mnt/base-us/browserd_profile"

# directory with performance test content
testContentDir = "/mnt/base-us/test_content"

# Log masks for different components.
# EVERYTHING: -1
# DEFAULT(INFO|EXCEPTIONS): -65536 (or just comment it out)
# EXCEPTIONS: -16777216
# NONE: 0
#logDefaultMask=-1
#logDispatcherMask=-1
#logViewMask=-1
#logNetworkMask=-1
#logIpcMask=-1
#logIpcDataMask=-1
#logStdErrMask=0
#logStdOutMask=0
#logConsoleMask=-1
logJSConsoleMask=0
#logEngineMask=-1

# Comma separated list of debug flags (ex: "perf, regions, memory")
# Possible values: all, keys, perf, perfDetails, regions, resources, memory, memoryDetails, network, showLocation
#debugFlags = "all"

# File where the ouput produced by the debug flags is sent 
#debugFile = "/mnt/base-us/output.txt"

#------------------------------------------
#              Special options
#------------------------------------------

# Specify the page that should be loaded when "home" key is pressed 
#homeKey = "http://localhost"

# What to do when we're running out of memory. Options are:
# 
# 0 - restart browser at 90M without showing a message 
# 1 - restart browser at 70M without showing a message 
# 2 - restart browser at 70M and show a message (the UI will appear frozen and message can't be dismissed
#     until browser finishes restarting)
# 3 - disable JavaScript at 70M and show message. JavaScript will be re-enabled on the next
#     page load unless it's turned off in settings. Restart at 90M without showing a message if 
#     memory usage continues to grow.
#
processTooLargeBehavior = 1

#------------------------------------------
#             Dithering 
#------------------------------------------
# 0 - Disable Dithering, 1 - use Stucki, 2 - use FS
ditherType=0

#------------------------------------------
#      Magic for Social Registration
#------------------------------------------
magicReturnEventURI = "about:return"

#------------------------------------------
#      White-lists
#------------------------------------------
# A regular expression pattern that represents a white-list of URIs that are
# allowed to load even if the device is not registered and the request will be
# sent to the proxy.
# TODO: about:blank is added because while loading the Privacy Notice and
# Condition of Use pages, WebKit asks for navigation policy for "about:blank" a
# few times. Should investigate why WebKit is doing that.
registrationWhiteListPattern = "(http(s)?://[a-zA-Z0-9\-\.]+\.(amazon|images-amazon|ssl-images-amazon|kindle|joyo)\.(com|de|ca|co\.uk|co\.jp|eu|fr|cn|COM|DE|CA|CO\.UK|CO\.JP|EU|FR|CN))|(http(s)?://[a-zA-Z0-9\-\.]+\.cloudfront\.net)|(about:blank)"
